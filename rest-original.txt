define(function ()
{
    return SoapClient;
});

SoapClient =
    {
        HostUrl: "",    // http://localhost:8080/2Charta-DMS/CServer
        NameSpace: "",  // http://webservice.cserver.j2c.lorenz.de/
        RESTSuffix: "/rest/",

        /**
         * Prepares a webservice request based on a DataProvider-Object
         * Generates the XML an calls fn_SendRequest()
         * @param {object} request  An object based on DataProvider-Objects
         */
        fn_PrepareRequest: function (request)
        {
            var requestResponse;
            var requestName = "";
            var requestCallback;
            var wrapperObject;
            var propName;

            if (request)
            {
                // Read out all the Webmethod's properties
                for (propName in request)
                {
                    // Only process fixed properties and arguments, no functions!
                    if (request.hasOwnProperty(propName))
                    {
                        // Collect the Response-Type
                        if (propName === "request_Response")
                        {
                            requestResponse = request[propName];
                            // Collect the Request-Name
                        } else if (propName === "request_Name")
                        {
                            requestName = request[propName];
                            // Collect the Callback-Function
                        } else if (propName === "request_Callback")
                        {
                            requestCallback = request[propName];
                            // Collect and build the Wrapper-Object
                        } else if (UTIL.fn_HasOwnWebserviceProperty(request, propName))
                        {
                            wrapperObject = request[propName];
                            if (wrapperObject.hasOwnProperty && wrapperObject.hasOwnProperty("fn_ConvertToJSON"))
                            {
                                wrapperObject = wrapperObject.fn_ConvertToJSON();
                            }
                        }
                    }
                }

                // Proceed sending the Request
                if (requestName && requestResponse)
                {
                    SoapClient.fn_Send_Request(requestName, wrapperObject, function (responseJSON, was_successfull)
                    {
                        if (was_successfull)
                        {
                            // Process the response and populate the return-object of the response
                            try
                            {
                                requestResponse.return.fn_RebaseOnJSON(responseJSON);
                            } catch (e)
                            {
                                Log.fn_Log(e, ENUMS.LOG_LEVEL.ERROR);
                            }
                            requestCallback(requestResponse)
                        } else
                        {
                            requestCallback(responseJSON.responseText, true)
                        }
                    });
                }
            }
        },

        /**
         * Sends a REST-webservice-request to the specified Host
         * @param {string} method_name          Name of the method being called
         * @param {JSON} wrapper_object         Stringified JSON-Representation of the parameter's wrapping-object
         * @param {function} fn_callback        Function being called on responses
         */
        fn_Send_Request: function (method_name, wrapper_object, fn_callback)
        {
            // Call the webservice
            if(GLOBAL_REST_DEBUG === true && method_name !== "REST_IsServerAvail")
            {
                console.log("REST-Debug WrapperJSON: " + wrapper_object);
            }
            try
            {
                $.ajax(
                    {
                        url: SoapClient.HostUrl + SoapClient.RESTSuffix + method_name + "/",
                        data: wrapper_object,
                        dataType: "json",
                        contentType: "text/plain; charset=UTF-8",
                        type: "POST",
                        success: function (response)
                        {
                            fn_callback(response, true);
                        },
                        error: function (response)
                        {
                            fn_callback(response, false);
                        }
                    });
            } catch (e)
            {
                Log.fn_Log(e, ENUMS.LOG_LEVEL.ERROR);
                fn_callback(null, false);
            }

        }
    };